{"ast":null,"code":"function anumber(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n// copied from utils\nfunction isBytes(a) {\n  return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array';\n}\nfunction abytes(b) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  for (var _len = arguments.length, lengths = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    lengths[_key - 1] = arguments[_key];\n  }\n  if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction ahash(h) {\n  if (typeof h !== 'function' || typeof h.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\nfunction aexists(instance) {\n  let checkFinished = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out, instance) {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\nexport { anumber, anumber as number, abytes, abytes as bytes, ahash, aexists, aoutput };\nconst assert = {\n  number: anumber,\n  bytes: abytes,\n  hash: ahash,\n  exists: aexists,\n  output: aoutput\n};\nexport default assert;","map":{"version":3,"names":["anumber","n","Number","isSafeInteger","Error","isBytes","a","Uint8Array","ArrayBuffer","isView","constructor","name","abytes","b","_len","arguments","length","lengths","Array","_key","includes","ahash","h","create","outputLen","blockLen","aexists","instance","checkFinished","undefined","destroyed","finished","aoutput","out","min","number","bytes","assert","hash","exists","output"],"sources":["C:\\Users\\sande\\Desktop\\react app test\\wallet-connect-app\\my-wallet-app\\node_modules\\@noble\\hashes\\src\\_assert.ts"],"sourcesContent":["function anumber(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction ahash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\nfunction aexists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out: any, instance: any) {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport { anumber, anumber as number, abytes, abytes as bytes, ahash, aexists, aoutput };\n\nconst assert = {\n  number: anumber,\n  bytes: abytes,\n  hash: ahash,\n  exists: aexists,\n  output: aoutput,\n};\nexport default assert;\n"],"mappings":"AAAA,SAASA,OAAOA,CAACC,CAAS;EACxB,IAAI,CAACC,MAAM,CAACC,aAAa,CAACF,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,MAAM,IAAIG,KAAK,CAAC,iCAAiC,GAAGH,CAAC,CAAC;AAC/F;AAEA;AACA,SAASI,OAAOA,CAACC,CAAU;EACzB,OAAOA,CAAC,YAAYC,UAAU,IAAKC,WAAW,CAACC,MAAM,CAACH,CAAC,CAAC,IAAIA,CAAC,CAACI,WAAW,CAACC,IAAI,KAAK,YAAa;AAClG;AAEA,SAASC,MAAMA,CAACC,CAAyB,EAAsB;EAC7D,IAAI,CAACR,OAAO,CAACQ,CAAC,CAAC,EAAE,MAAM,IAAIT,KAAK,CAAC,qBAAqB,CAAC;EAAC,SAAAU,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADZC,OAAiB,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAjBF,OAAiB,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAE7D,IAAIF,OAAO,CAACD,MAAM,GAAG,CAAC,IAAI,CAACC,OAAO,CAACG,QAAQ,CAACP,CAAC,CAACG,MAAM,CAAC,EACnD,MAAM,IAAIZ,KAAK,CAAC,gCAAgC,GAAGa,OAAO,GAAG,eAAe,GAAGJ,CAAC,CAACG,MAAM,CAAC;AAC5F;AAQA,SAASK,KAAKA,CAACC,CAAO;EACpB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,CAACC,MAAM,KAAK,UAAU,EAC3D,MAAM,IAAInB,KAAK,CAAC,iDAAiD,CAAC;EACpEJ,OAAO,CAACsB,CAAC,CAACE,SAAS,CAAC;EACpBxB,OAAO,CAACsB,CAAC,CAACG,QAAQ,CAAC;AACrB;AAEA,SAASC,OAAOA,CAACC,QAAa,EAAsB;EAAA,IAApBC,aAAa,GAAAb,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAc,SAAA,GAAAd,SAAA,MAAG,IAAI;EAClD,IAAIY,QAAQ,CAACG,SAAS,EAAE,MAAM,IAAI1B,KAAK,CAAC,kCAAkC,CAAC;EAC3E,IAAIwB,aAAa,IAAID,QAAQ,CAACI,QAAQ,EAAE,MAAM,IAAI3B,KAAK,CAAC,uCAAuC,CAAC;AAClG;AACA,SAAS4B,OAAOA,CAACC,GAAQ,EAAEN,QAAa;EACtCf,MAAM,CAACqB,GAAG,CAAC;EACX,MAAMC,GAAG,GAAGP,QAAQ,CAACH,SAAS;EAC9B,IAAIS,GAAG,CAACjB,MAAM,GAAGkB,GAAG,EAAE;IACpB,MAAM,IAAI9B,KAAK,CAAC,wDAAwD,GAAG8B,GAAG,CAAC;EACjF;AACF;AAEA,SAASlC,OAAO,EAAEA,OAAO,IAAImC,MAAM,EAAEvB,MAAM,EAAEA,MAAM,IAAIwB,KAAK,EAAEf,KAAK,EAAEK,OAAO,EAAEM,OAAO;AAErF,MAAMK,MAAM,GAAG;EACbF,MAAM,EAAEnC,OAAO;EACfoC,KAAK,EAAExB,MAAM;EACb0B,IAAI,EAAEjB,KAAK;EACXkB,MAAM,EAAEb,OAAO;EACfc,MAAM,EAAER;CACT;AACD,eAAeK,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}