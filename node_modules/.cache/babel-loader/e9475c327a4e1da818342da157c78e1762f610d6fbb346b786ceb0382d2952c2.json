{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst tslib_1 = require(\"tslib\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst dynamic_1 = require(\"@trezor/connect/lib/impl/dynamic\");\nconst core_in_iframe_1 = require(\"./impl/core-in-iframe\");\nconst core_in_popup_1 = require(\"./impl/core-in-popup\");\nconst connectSettings_1 = require(\"./connectSettings\");\nconst IFRAME_ERRORS = ['Init_IframeBlocked', 'Init_IframeTimeout', 'Transport_Missing'];\nconst impl = new dynamic_1.TrezorConnectDynamic({\n  implementations: [{\n    type: 'iframe',\n    impl: new core_in_iframe_1.CoreInIframe()\n  }, {\n    type: 'core-in-popup',\n    impl: new core_in_popup_1.CoreInPopup()\n  }],\n  getInitTarget: settings => {\n    if (settings.coreMode === 'iframe') {\n      return 'iframe';\n    } else if (settings.coreMode === 'popup') {\n      return 'core-in-popup';\n    } else {\n      if (settings.coreMode && settings.coreMode !== 'auto') {\n        console.warn(`Invalid coreMode: ${settings.coreMode}`);\n      }\n      return 'iframe';\n    }\n  },\n  handleErrorFallback: async errorCode => {\n    var _a, _b, _c, _d, _e;\n    const env = (0, connectSettings_1.getEnv)();\n    const isCoreModeDisabled = ((_a = impl.lastSettings) === null || _a === void 0 ? void 0 : _a.popup) === false || env === 'webextension';\n    const isCoreModeAuto = ((_b = impl.lastSettings) === null || _b === void 0 ? void 0 : _b.coreMode) === 'auto' || ((_c = impl.lastSettings) === null || _c === void 0 ? void 0 : _c.coreMode) === undefined;\n    if (!isCoreModeDisabled && isCoreModeAuto && IFRAME_ERRORS.includes(errorCode)) {\n      const webUsbUnavailableInBrowser = !(navigator === null || navigator === void 0 ? void 0 : navigator.usb);\n      const webUsbDisabledInSettings = ((_e = (_d = impl.lastSettings) === null || _d === void 0 ? void 0 : _d.transports) === null || _e === void 0 ? void 0 : _e.includes('WebUsbTransport')) === false;\n      if (errorCode === 'Transport_Missing' && (webUsbUnavailableInBrowser || webUsbDisabledInSettings)) {\n        return false;\n      }\n      await impl.switchTarget('core-in-popup');\n      return true;\n    }\n    return false;\n  }\n});\nconst TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: impl.eventEmitter,\n  init: impl.init.bind(impl),\n  call: impl.call.bind(impl),\n  manifest: impl.manifest.bind(impl),\n  requestLogin: impl.requestLogin.bind(impl),\n  uiResponse: impl.uiResponse.bind(impl),\n  cancel: impl.cancel.bind(impl),\n  dispose: impl.dispose.bind(impl)\n}, {\n  renderWebUSBButton: impl.getTarget().renderWebUSBButton.bind(impl),\n  disableWebUSB: impl.getTarget().disableWebUSB.bind(impl),\n  requestWebUSBDevice: impl.getTarget().requestWebUSBDevice.bind(impl)\n});\nexports.default = TrezorConnect;\ntslib_1.__exportStar(require(\"@trezor/connect/lib/exports\"), exports);","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib_1","require","factory_1","dynamic_1","core_in_iframe_1","core_in_popup_1","connectSettings_1","IFRAME_ERRORS","impl","TrezorConnectDynamic","implementations","type","CoreInIframe","CoreInPopup","getInitTarget","settings","coreMode","console","warn","handleErrorFallback","errorCode","_a","_b","_c","_d","_e","env","getEnv","isCoreModeDisabled","lastSettings","popup","isCoreModeAuto","undefined","includes","webUsbUnavailableInBrowser","navigator","usb","webUsbDisabledInSettings","transports","switchTarget","TrezorConnect","factory","eventEmitter","init","bind","call","manifest","requestLogin","uiResponse","cancel","dispose","renderWebUSBButton","getTarget","disableWebUSB","requestWebUSBDevice","default","__exportStar"],"sources":["C:/Users/sande/Desktop/react app test/wallet-connect-app/my-wallet-app/node_modules/@trezor/connect-web/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst dynamic_1 = require(\"@trezor/connect/lib/impl/dynamic\");\nconst core_in_iframe_1 = require(\"./impl/core-in-iframe\");\nconst core_in_popup_1 = require(\"./impl/core-in-popup\");\nconst connectSettings_1 = require(\"./connectSettings\");\nconst IFRAME_ERRORS = ['Init_IframeBlocked', 'Init_IframeTimeout', 'Transport_Missing'];\nconst impl = new dynamic_1.TrezorConnectDynamic({\n    implementations: [\n        {\n            type: 'iframe',\n            impl: new core_in_iframe_1.CoreInIframe(),\n        },\n        {\n            type: 'core-in-popup',\n            impl: new core_in_popup_1.CoreInPopup(),\n        },\n    ],\n    getInitTarget: (settings) => {\n        if (settings.coreMode === 'iframe') {\n            return 'iframe';\n        }\n        else if (settings.coreMode === 'popup') {\n            return 'core-in-popup';\n        }\n        else {\n            if (settings.coreMode && settings.coreMode !== 'auto') {\n                console.warn(`Invalid coreMode: ${settings.coreMode}`);\n            }\n            return 'iframe';\n        }\n    },\n    handleErrorFallback: async (errorCode) => {\n        var _a, _b, _c, _d, _e;\n        const env = (0, connectSettings_1.getEnv)();\n        const isCoreModeDisabled = ((_a = impl.lastSettings) === null || _a === void 0 ? void 0 : _a.popup) === false || env === 'webextension';\n        const isCoreModeAuto = ((_b = impl.lastSettings) === null || _b === void 0 ? void 0 : _b.coreMode) === 'auto' || ((_c = impl.lastSettings) === null || _c === void 0 ? void 0 : _c.coreMode) === undefined;\n        if (!isCoreModeDisabled && isCoreModeAuto && IFRAME_ERRORS.includes(errorCode)) {\n            const webUsbUnavailableInBrowser = !(navigator === null || navigator === void 0 ? void 0 : navigator.usb);\n            const webUsbDisabledInSettings = ((_e = (_d = impl.lastSettings) === null || _d === void 0 ? void 0 : _d.transports) === null || _e === void 0 ? void 0 : _e.includes('WebUsbTransport')) === false;\n            if (errorCode === 'Transport_Missing' &&\n                (webUsbUnavailableInBrowser || webUsbDisabledInSettings)) {\n                return false;\n            }\n            await impl.switchTarget('core-in-popup');\n            return true;\n        }\n        return false;\n    },\n});\nconst TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n}, {\n    renderWebUSBButton: impl.getTarget().renderWebUSBButton.bind(impl),\n    disableWebUSB: impl.getTarget().disableWebUSB.bind(impl),\n    requestWebUSBDevice: impl.getTarget().requestWebUSBDevice.bind(impl),\n});\nexports.default = TrezorConnect;\ntslib_1.__exportStar(require(\"@trezor/connect/lib/exports\"), exports);\n//# sourceMappingURL=index.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}